{"version":3,"sources":["Components/FormDialogs/FormDialog.js","Components/Header.js","Components/Footer.js","Components/Loader.js","Components/ProductCard.js","Hooks/HttpRequests.js","Components/SortSelect.js","Views/Home.js","Components/FormDialogs/FormDialogUpdate.js","Components/FormDialogs/FormDialogComment.js","Components/Comments.js","Views/Product.js","App.js","serviceWorker.js","index.js"],"names":["FormDialogTest","React","useState","open","setOpen","handleClose","name","description","count","color","weight","image","data","setData","handle","e","newData","target","id","value","console","log","style","marginBottom","marginTop","Button","className","variant","onClick","Dialog","onClose","aria-labelledby","Form","onSubmit","preventDefault","axios","post","then","res","document","location","reload","catch","err","submit","DialogTitle","DialogContent","DialogContentText","TextField","onChange","margin","label","type","fullWidth","multiline","rows","DialogActions","Header","background","to","fontSize","Footer","Loader","ProductCard","props","showCard","setShowCard","product","width","height","length","substring","delete","r","startIcon","useAxiosGet","url","loading","error","request","setRequest","useEffect","get","response","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","SortSelect","classes","sortType","setSortType","FormControl","Select","event","displayEmpty","inputProps","MenuItem","FormHelperText","Home","products","content","href","sort","a","b","map","key","minHeight","backgroundColor","FormDialogUpdateTest","comments","put","FormDialogComment","comment","setComment","autoFocus","Comments","root","flexGrow","paper","padding","textAlign","alignItems","index","Card","IconButton","splice","handleDelete","aria-label","Grid","item","xs","Paper","Divider","Product","paddingLeft","useParams","container","src","alt","float","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3415e3c6.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from \"axios\";\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nexport default function FormDialogTest() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        count: \"\",\r\n        color: \"\",\r\n        weight: \"\",\r\n        image: \"\"\r\n    })\r\n\r\n    const url = \"https://6135dcd860d2900017c3c1c0.mockapi.io/api/v1/products\";\r\n\r\n    function submit(e) {\r\n        e.preventDefault();\r\n        axios.post(url, {\r\n            name: data.name,\r\n            description: data.description,\r\n            count: data.count,\r\n            color: data.color,\r\n            weight: data.weight,\r\n            image: data.image\r\n        })\r\n            .then(res => {\r\n                document.location.reload();\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        setData({\r\n            name: \"\",\r\n            description: \"\",\r\n            count: \"\",\r\n            color: \"\",\r\n            weight: \"\",\r\n            image: \"\"\r\n        })\r\n    }\r\n\r\n    function handle(e){\r\n        const newData={...data}\r\n        newData[e.target.id] = e.target.value\r\n        setData(newData)\r\n        console.log(newData)\r\n    }\r\n\r\n    const style = {\r\n        marginBottom: 10,\r\n        marginTop: 10\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"shadow-2xl btn-green\" variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Add new product\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <Form onSubmit={(e) => submit(e)}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add new product</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please, describe the product you want to add.\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.name}\r\n                            style={style}\r\n                            // autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Product name\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.description}\r\n                            style={style}\r\n                            id=\"description\"\r\n                            label=\"Product Description\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            rows={4}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.count}\r\n                            style={style}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            id=\"count\"\r\n                            label=\"Count\"\r\n                            type=\"number\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.color}\r\n                            style={style}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            id=\"color\"\r\n                            label=\"Color\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.weight}\r\n                            style={style}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            id=\"weight\"\r\n                            label=\"Weight in grams\"\r\n                            type=\"number\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.image}\r\n                            style={style}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            id=\"image\"\r\n                            label=\"Image URL\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"submit\">\r\n                            Add product\r\n                        </Button>\r\n\r\n                    </DialogActions>\r\n                </Form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport FormDialog from \"./FormDialogs/FormDialog\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Header(){\r\n    return (\r\n        <header className=\"border-b p-3 flex justify-between items-center bg-gray-300\" style={{background: \"#24292f\"}}>\r\n            <Link to=\"/\" className=\"ml-8\" style={{fontSize: 25, color: \"#FFFFFF\"}} >\r\n                Product List\r\n            </Link>\r\n            <FormDialog />\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full border-t\">\r\n            inforce test task\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Loader(){\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction ProductCard(props){\r\n    const [showCard, setShowCard] = useState(true);\r\n    function handleDelete(e) {\r\n        axios.delete(`https://6135dcd860d2900017c3c1c0.mockapi.io/api/v1/products/${props.product.id}`)\r\n            .then(r => console.log(r.data))\r\n        setShowCard(false);\r\n    }\r\n    return (<div>\r\n            {showCard ?\r\n                <div className=\"border bg-gray-300 hover:bg-gray-400 shadow hover:shadow-2xl mb-4 rounded overflow-hidden\">\r\n                    <Link to={`/products/${props.product.id}`}>\r\n                        <div\r\n                            style={{\r\n                                'backgroundImage': `url('${props.product.image}')`,\r\n                                width: 280,\r\n                                height: 260\r\n                            }}\r\n                            className=\"w-full h-64 bg-blue bg-cover\"\r\n                        >\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"p-3\">\r\n                        <h3 className=\"font-bold text-xl mb-3\">\r\n                            <Link to={`/products/${props.product.id}`}>\r\n                                {props.product.name}\r\n                            </Link>\r\n                        </h3>\r\n                        <div className=\"font-bold mb-3\">\r\n                            Count: {props.product.count}\r\n                        </div>\r\n                        <div className=\"mb-3 italic\">\r\n                            {props.product.description.length > 25 ?\r\n                                `${props.product.description.substring(0, 25)}...` : props.product.description\r\n                            }\r\n                        </div>\r\n                        <Link\r\n                            to={`/products/${props.product.id}`}\r\n                            className=\"btn-green text-white p-2 flex justify-center w-full rounded-t\"\r\n                        >\r\n                            View\r\n                        </Link>\r\n\r\n                        <Button\r\n                            className=\"btn-warning\"\r\n                            onClick={(e) => {\r\n                                handleDelete(e);\r\n                            }}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            startIcon={<DeleteIcon />}\r\n                            fullWidth\r\n                        >\r\n                            delete\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            :\r\n                <div className=\"border bg-gray-300 hover:bg-gray-400 shadow mb-4 rounded overflow-hidden text-center pt-32\" style={{height: 470}}>\r\n                    <h1 className=\"font-bold text-xl mb-3\">Product was successfully deleted</h1>\r\n                </div>\r\n            }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport function useAxiosGet(url){\r\n    const [request, setRequest] = useState({\r\n        loading: false,\r\n        data: null,\r\n        error: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setRequest({\r\n            loading: true,\r\n            data: null,\r\n            error: false\r\n        })\r\n        axios.get(url)\r\n            .then(response => {\r\n                setRequest({\r\n                    loading: false,\r\n                    data: response.data,\r\n                    error: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                setRequest({\r\n                    loading: false,\r\n                    data: null,\r\n                    error: true\r\n                })\r\n            })\r\n    }, [url])\r\n\r\n    return request\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SortSelect(props) {\r\n    const classes = useStyles();\r\n    const [sortType, setSortType] = [props.sortType, props.setSortType]\r\n    const handleChange = (event) => {\r\n        setSortType(event.target.value);\r\n    };\r\n\r\n    return (\r\n            <FormControl className={classes.formControl}>\r\n                <Select\r\n                    value={sortType}\r\n                    onChange={handleChange}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value='asc'>Count asc</MenuItem>\r\n                    <MenuItem value='desc'>Count desc</MenuItem>\r\n                    <MenuItem value='a-z'>Name A-Z</MenuItem>\r\n                    <MenuItem value='z-a'>Name Z-A</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Sort by</FormHelperText>\r\n            </FormControl>\r\n    );\r\n}","import React, {useState} from 'react'\r\nimport Loader from '../Components/Loader'\r\nimport ProductCard from '../Components/ProductCard'\r\nimport { useAxiosGet } from '../Hooks/HttpRequests'\r\nimport SortSelect from \"../Components/SortSelect\";\r\n\r\nfunction Home(){\r\n    // Create your own Mock API: https://mockapi.io/\r\n    const url = `https://6135dcd860d2900017c3c1c0.mockapi.io/api/v1/products?page=1&limit=20`\r\n    let products = useAxiosGet(url)\r\n    const [sortType, setSortType] = useState('asc');\r\n    let content = null\r\n\r\n    if(products.error){\r\n        content = <div>\r\n            <div className=\"bg-blue-300 mb-2 p-3\">\r\n                If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\r\n            </div>\r\n            <div className=\"bg-red-300 p-3\">\r\n                There was an error please refresh or try again later.\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    if(products.loading){\r\n        content = <Loader></Loader>\r\n    }\r\n\r\n    if(products.data){\r\n        if (sortType === 'asc') {\r\n            products.data.sort((a, b) => (a.count > b.count) ? 1 : -1)\r\n            content = products.data.map((product) =>\r\n                <div key={product.id} className=\"flex-no-shrink w-full md:w-1/4 md:px-3\">\r\n                    <ProductCard\r\n                        product={product}\r\n                    />\r\n                </div>\r\n            )\r\n        } else if(sortType === 'desc') {\r\n            products.data.sort((a, b) => (a.count < b.count) ? 1 : -1)\r\n            content = products.data.map((product) =>\r\n                <div key={product.id} className=\"flex-no-shrink w-full md:w-1/4 md:px-3\">\r\n                    <ProductCard\r\n                        product={product}\r\n                    />\r\n                </div>\r\n            )\r\n        } else if(sortType === 'a-z') {\r\n            products.data.sort((a, b) => (a.name > b.name) ? 1 : -1)\r\n            content = products.data.map((product) =>\r\n                <div key={product.id} className=\"flex-no-shrink w-full md:w-1/4 md:px-3\">\r\n                    <ProductCard\r\n                        product={product}\r\n                    />\r\n                </div>\r\n            )\r\n        } else if(sortType === 'z-a'){\r\n            products.data.sort((a, b) => (a.name < b.name) ? 1 : -1)\r\n            content = products.data.map((product) =>\r\n                <div key={product.id} className=\"flex-no-shrink w-full md:w-1/4 md:px-3\">\r\n                    <ProductCard\r\n                        product={product}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto pt-6 pl-10 pr-10 rounded shadow-xl\"  style={{minHeight: 900, backgroundColor: \"#f6f8fa\"}}>\r\n            <h1 className=\"font-bold text-2xl mb-3\">\r\n                Best Sellers\r\n            </h1>\r\n            <SortSelect sortType={sortType} setSortType={setSortType} />\r\n            <div className=\"md:flex flex-wrap md:-mx-3\">\r\n                { content } \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from \"axios\";\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nexport default function FormDialogUpdateTest(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [data, setData] = useState({\r\n        name: props.product.name,\r\n        description: props.product.description,\r\n        count: props.product.count,\r\n        color: props.product.color,\r\n        weight: props.product.weight,\r\n        image: props.product.image,\r\n        comments: props.product.comments\r\n    })\r\n    const url = `https://6135dcd860d2900017c3c1c0.mockapi.io/api/v1/products/${props.product.id}`;\r\n\r\n    function submit(e) {\r\n        e.preventDefault();\r\n        axios.put(url, {\r\n            name: data.name,\r\n            description: data.description,\r\n            count: data.count,\r\n            color: data.color,\r\n            weight: data.weight,\r\n            image: data.image\r\n        })\r\n            .then(res => {\r\n                document.location.reload();\r\n                console.log(res.data);\r\n            })\r\n    }\r\n\r\n    function handle(e){\r\n        const newData={...data}\r\n        newData[e.target.id] = e.target.value\r\n        setData(newData)\r\n        console.log(newData)\r\n    }\r\n\r\n    const style = {\r\n        marginBottom: 10,\r\n        marginTop: 10\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"btn-green shadow\" variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Edit product\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <Form onSubmit={(e) => submit(e)}>\r\n                    <DialogTitle id=\"form-dialog-title\">Edit product</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please, edit the fields that you need.\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.name}\r\n                            style={style}\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Product name\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.description}\r\n                            style={style}\r\n                            id=\"description\"\r\n                            label=\"Product Description\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            rows={4}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.count}\r\n                            style={style}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            id=\"count\"\r\n                            label=\"Count\"\r\n                            type=\"number\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.color}\r\n                            style={style}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            id=\"color\"\r\n                            label=\"Color\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.weight}\r\n                            style={style}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            id=\"weight\"\r\n                            label=\"Weight in grams\"\r\n                            type=\"number\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={data.image}\r\n                            style={style}\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            id=\"image\"\r\n                            label=\"Image URL\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"submit\">\r\n                            Edit product\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from \"axios\";\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nexport default function FormDialogComment(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    const url = `https://6135dcd860d2900017c3c1c0.mockapi.io/api/v1/products/${props.product.id}`;\r\n\r\n    function submit(e) {\r\n        e.preventDefault();\r\n        axios.put(url, {\r\n            comments: [...props.product.comments, comment]\r\n        })\r\n            .then(res => {\r\n                document.location.reload();\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        setComment(\"\");\r\n    }\r\n\r\n    function handle(e){\r\n        setComment(e.target.value)\r\n    }\r\n\r\n    const style = {\r\n        marginBottom: 10,\r\n        marginTop: 10,\r\n        width: 500\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"btn-green shadow\" variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Add new comment\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <Form onSubmit={(e) => submit(e)}>\r\n                    <DialogTitle id=\"form-dialog-title\">Comment</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            onChange={(e) => handle(e)}\r\n                            value={comment}\r\n                            style={style}\r\n                            id=\"description\"\r\n                            label=\"Please, write your comment\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            rows={4}\r\n                            autoFocus\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"submit\">\r\n                            Add comment\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Card, Divider, Grid, IconButton, makeStyles, Paper} from \"@material-ui/core\";\r\nimport FormDialogComment from \"./FormDialogs/FormDialogComment\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Comments(props) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        paper: {\r\n            minHeight: 450,\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            alignItems: \"center\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    let comments = props.comments;\r\n    function handleDelete(e, index) {\r\n        e.preventDefault();\r\n        const newComments = [...props.product.comments.splice(index, 1)];\r\n        axios.put(`https://6135dcd860d2900017c3c1c0.mockapi.io/api/v1/products/${props.product.id}`, {\r\n            comments: [...props.product.comments]\r\n        })\r\n            .then(res => {\r\n                document.location.reload();\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    let content = comments.map((comment, index) =>\r\n            <Card key={index} className=\"shadow\" style={{minHeight: 50, margin: 20, background: \"#f6f7f8\"}}>\r\n                <p className=\"p-5 italic\">{comment}</p>\r\n                <IconButton\r\n                    className=\"inline-block\"\r\n                    onClick={(e) => {handleDelete(e, index);}}\r\n                    aria-label=\"delete\">\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Card>\r\n        )\r\n\r\n    return (\r\n    <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n            <h1 className=\"text-2xl font-bold mb-2\">Comments</h1>\r\n            <Divider variant=\"middle\" />\r\n            {content}\r\n            <FormDialogComment product={props.product}/>\r\n        </Paper>\r\n    </Grid>\r\n    );\r\n}","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Loader from '../Components/Loader'\r\nimport { useAxiosGet } from '../Hooks/HttpRequests'\r\nimport {Divider, Grid, makeStyles, Paper} from \"@material-ui/core\";\r\nimport FormDialogUpdate from \"../Components/FormDialogs/FormDialogUpdate\";\r\nimport Comments from \"../Components/Comments\";\r\n\r\nfunction Product(){\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        paper: {\r\n            height: 450,\r\n            padding: theme.spacing(2),\r\n            textAlign: 'left',\r\n            paddingLeft: 25,\r\n            fontSize: \"1.2rem\"\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const { id } = useParams()\r\n    // You can create your own Mock API: https://mockapi.io/\r\n    const url = `https://6135dcd860d2900017c3c1c0.mockapi.io/api/v1/products/${id}`\r\n    \r\n    let product = useAxiosGet(url)\r\n\r\n    let content = null\r\n\r\n    if(product.error){\r\n        content = <div>\r\n            <div className=\"bg-blue-300 mb-2 p-3\">\r\n                If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\r\n            </div>\r\n            <div className=\"bg-red-300 p-3\">\r\n                There was an error please refresh or try again later.\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    if(product.loading){\r\n        content = <Loader/>\r\n    }\r\n\r\n    if(product.data){\r\n        content =\r\n        <div className=\"container mx-auto pt-6 pl-10 pr-10 bg-gray-200 rounded\" style={{minHeight: 1000}}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                    <Paper className={classes.paper}><img\r\n                        className=\"rounded\"\r\n                        src={product.data.image}\r\n                        alt={product.data.name}\r\n                        style={{float: \"left\"}}\r\n                    /></Paper>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Paper className={classes.paper}>\r\n                        <h1 className=\"text-2xl font-bold mb-3\">\r\n                            {product.data.name}\r\n                        </h1>\r\n                        <Divider />\r\n                        <div className=\"pt-3\">\r\n                            Count: {product.data.count}\r\n                        </div>\r\n                        <div className=\"pt-1\">\r\n                            Description: {product.data.description}\r\n                        </div>\r\n                        <div className=\"pt-1\">\r\n                            Color: {product.data.color}\r\n                        </div>\r\n                        <div className=\"pt-1 pb-3\">\r\n                            Weight: {product.data.weight} g\r\n                        </div>\r\n                        <FormDialogUpdate product={product.data}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Comments comments={product.data.comments} product={product.data}/>\r\n            </Grid>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\"\r\nimport Header from './Components/Header'\r\nimport Footer from './Components/Footer'\r\nimport Home from './Views/Home'\r\nimport Product from './Views/Product'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"relative pb-10 min-h-screen\">\r\n      <Router>\r\n        \r\n        <Header />\r\n\r\n        <div className=\"p-3\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/products/:id\">\r\n            <Product />\r\n          </Route>\r\n        </Switch>\r\n        </div>\r\n\r\n        <Footer />\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tailwind.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}